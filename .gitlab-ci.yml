---
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html

stages:
  - test
  - build
  - release_gdcdatamodel2
  - tag_gdcdatamodel2

include:
  - project: nci-gdc/gitlab-templates
    ref: 0.6.2
    file:
      - templates/global/full.yaml
      - templates/python/full.yaml
      - templates/common/python.yaml

tox:
  parallel:
    matrix:
      - BUILD_PY_VERSION: [python3.7, python3.8, python3.9]
  script:
    - tox -r -e py

release:
  before_script:
    - git fetch --unshallow || true
    - |
      if [ ${CI_COMMIT_TAG+x} ]; then
        export TWINE_REPOSITORY_URL=https://nexus.osdc.io/repository/pypi-releases/
      fi


execute_plaster:
  image: docker.osdc.io/ncigdc/python3.9-builder:${BASE_CONTAINER_VERSION}
  stage: build
  script:
    - !reference [.load_github_key, script]
    - export root_dir=$(pwd)
    - echo $root_dir
    - pip install "setuptools_scm>=6.2"
    - export DICT_VERSION=$(python -m setuptools_scm)
    - echo $DICT_VERSION
    - mkdir -p gdcdictionary/$DICT_VERSION
    - cp -r src/gdcdictionary/schemas/* gdcdictionary/$DICT_VERSION
    - git clone git@github.com:NCI-GDC/gdcdatamodel2.git
    - cd gdcdatamodel2
    - git checkout "$CI_COMMIT_REF_NAME" || git checkout -b "$CI_COMMIT_REF_NAME"
    - git log -1
    - echo $CI_TRIGGER_BRANCH
    - |
      if [ ${CI_TRIGGER_BRANCH+x} ]; then
        pip install "gdc-plaster==$CI_TRIGGER_BRANCH" "psqlgml>=0.2.4"
      else
        pip install "gdc-plaster>=1.1.0" "psqlgml>=0.2.4"
      fi
    - plaster --version
    - psqlgml --version
    - |
      plaster generate-no-profile \
        -i $root_dir \
        --dict-name gdcdictionary \
        --dict-version $DICT_VERSION \
        -o src/gdcdatamodel2/models \
        -s src/gdcdatamodel2/partial_dictionary
    - pip install pre-commit==${PRE_COMMIT_VERSION}
    - pre-commit run -a || true
    - git status
  artifacts:
    paths:
      - gdcdatamodel2
    expire_in: 1 week


push_datamodels_to_github:
  image: docker.osdc.io/ncigdc/python3.6-builder:${BASE_CONTAINER_VERSION}
  stage: release_gdcdatamodel2
  script:
    - !reference [.load_github_key, script]
    - cd gdcdatamodel2
    - cat setup.cfg
    - git status
    - git add .
    - git commit -m "Use gdcdictionary $CI_COMMIT_REF_NAME $CI_COMMIT_SHA" || true
    - git rev-parse --short HEAD
    - git push origin "$CI_COMMIT_REF_NAME" || true
  dependencies:
    - execute_plaster
  artifacts:
    paths:
      - gdcdatamodel2
    expire_in: 1 week


push_datamodels_tag_to_github:
  image: docker.osdc.io/ncigdc/python3.8-builder:${BASE_CONTAINER_VERSION}
  stage: tag_gdcdatamodel2
  script:
    - !reference [ .load_github_key, script ]
    - cd gdcdatamodel2
    - git push origin --delete "$CI_COMMIT_REF_NAME" || true # delete branch with tag name
    - git log -1
    - echo "gdcdictionary $CI_COMMIT_SHORT_SHA gdcdatamodel2 $(git rev-parse --short HEAD)"
    - git tag -a $CI_COMMIT_TAG -m "gdcdictionary $CI_COMMIT_SHORT_SHA gdcdatamodel2 $(git rev-parse --short HEAD)"
    - git push --tags
  dependencies:
    - push_datamodels_to_github
  only:
    - tags

trigger_gitlab_mirror_pull_github_for_gdcdatamodel2:
  stage: .post
  script:
    - apk add --no-cache curl
    - >
      curl --fail --request POST
      --form token=$CI_JOB_TOKEN
      "https://gitlab.example.com/api/v4/projects/56/mirror/pull"
  when: manual
