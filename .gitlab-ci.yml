---
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html

stages:
  - test
  - build
  - release_gdcdatamodel2
  - tag_gdcdatamodel2

include:
  - project: nci-gdc/gitlab-templates
    ref: 0.2.1
    file:
      - templates/global/full.yaml
      - templates/python/full.yaml
      - templates/common/python.yaml

.python_versions:
  parallel:
    matrix:
      - BUILD_PY_VERSION: [python3.7]
        RELEASE_PY_VERSION: [python3.7]

.tox_script:
  script:
    - python -m pip install tox
    - tox -r -e py

release:
  before_script:
    - git fetch --unshallow || true

execute_plaster:
  image: docker.osdc.io/ncigdc/python3.8-builder:${BASE_CONTAINER_VERSION}
  stage: build
  script:
    - !reference [.load_github_key, script]
    - pwd
    - git clone git@github.com:NCI-GDC/gdcdatamodel2.git
    - cd gdcdatamodel2
    - git checkout "$CI_COMMIT_REF_NAME" || git checkout -b "$CI_COMMIT_REF_NAME"
    - git log -1
    - sed -i 's|version = .*|version ="'"$CI_COMMIT_REF_NAME"'"|' plaster.toml
    - sed -i 's/is_git_tag = .*/is_git_tag = false/' plaster.toml
    - cat plaster.toml
    - bash plaster
    - git status
    - sed -i 's|gdcdictionary @ git+https://github.com/NCI-GDC/gdcdictionary.git@.*#egg=gdcdictionary|gdcdictionary @ git+https://github.com/NCI-GDC/gdcdictionary.git@'"$CI_COMMIT_REF_NAME"'#egg=gdcdictionary|' setup.cfg
    - cat setup.cfg
  artifacts:
    paths:
      - gdcdatamodel2
    expire_in: 1 week


push_datamodels_to_github:
  image: docker.osdc.io/ncigdc/python3.6-builder:${BASE_CONTAINER_VERSION}
  stage: release_gdcdatamodel2
  script:
    - !reference [.load_github_key, script]
    - cd gdcdatamodel2
    - cat setup.cfg
    - git status
    - git add .
    - git commit -m "Use gdcdictionary $CI_COMMIT_REF_NAME $CI_COMMIT_SHA"
    - git push origin "$CI_COMMIT_REF_NAME"
  allow_failure: true   # failure when no changes of models
  dependencies:
    - execute_plaster


push_datamodels_tag_to_github:
  image: docker.osdc.io/ncigdc/python3.8-builder:${BASE_CONTAINER_VERSION}
  stage: tag_gdcdatamodel2
  script:
    - !reference [ .load_github_key, script ]
    # can not use artifact from previous stage because previous stage is allowed to fail
    - git clone git@github.com:NCI-GDC/gdcdatamodel2.git
    - cd gdcdatamodel2
    - git log -1
    - echo "gdcdictionary $CI_COMMIT_SHORT_SHA gdcdatamodel2 $(git rev-parse --short HEAD)"
    - git tag -a $CI_COMMIT_TAG -m "gdcdictionary $CI_COMMIT_SHORT_SHA gdcdatamodel2 $(git rev-parse --short HEAD)"
    - git push origin $CI_COMMIT_TAG
  only:
    - tags
  dependencies:
    - push_datamodels_to_github
