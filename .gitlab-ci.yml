---
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html

stages:
  - test
  - build
  - release_gdcdatamodel2

include:
  - project: nci-gdc/gitlab-templates
    ref: 0.2.0
    file:
      - templates/global/full.yaml
      - templates/python/full.yaml

variables:
  BASE_CONTAINER_VERSION: "1.4.0"
  PRE_COMMIT_DOCKER_IMAGE: docker.osdc.io/ncigdc/python3.7-builder:2.2.0
  DOCKER_BUILDKIT: 1
  PIP_EXTRA_INDEX_URL: https://nexus.osdc.io/repository/pypi-all/simple
  DOCKER_BUILD_OPTS: "--build-arg PIP_EXTRA_INDEX_URL=https://nexus.osdc.io/repository/pypi-all/simple"
  DOCKER_PUSH_OPTS: "--all-tags"
  TWINE_REPOSITORY_URL: "https://nexus.osdc.io/repository/pypi-snapshots/"

tox:
  stage: test
  image: ${BASE_CONTAINER_REGISTRY}/python${REPO_PY_VERSION}-builder:${BASE_CONTAINER_VERSION}
  parallel:
    matrix:
      - REPO_PY_VERSION: ["3.7", "3.8", "3.9"]
  script:
    - pip install tox
    - tox -e ${REPO_PY_VERSION}

tox legacy:
  stage: test
  image: ${BASE_CONTAINER_REGISTRY}/python36-builder:${LEGACY_BASE_CONTAINER_VERSION}
  script:
    - pip install tox
    - tox -e py36

# These rules determine when the plaster steps execute.
.override_gdcdictionary_version:
  rules:
    - if: $GDCDICTIONARY_TARGET_VERSION_OVERRIDE != null
      variables:
        GDCDICTIONARY_TARGET_VERSION: $GDCDICTIONARY_TARGET_VERSION_OVERRIDE
    - if: $CI_COMMIT_TAG != null
      variables:
        GDCDICTIONARY_TARGET_VERSION: $CI_COMMIT_TAG
    - if: $CI_COMMIT_REF_NAME =~ /^(master|main|release)/
      when: never

update_reqs_for_gdcdatamodel2:
  image: docker.osdc.io/ncigdc/python36-builder:1.4.0
  stage: build
  script:
    - !reference [.load_github_key, script]
    - git clone git@github.com:NCI-GDC/gdcdatamodel2.git
    - cd gdcdatamodel2
    - git checkout "$GDCDICTIONARY_TARGET_VERSION" || git checkout -b "$GDCDICTIONARY_TARGET_VERSION"
    - git log -1
    - sed -i 's|gdcdictionary @ git+https://github.com/NCI-GDC/gdcdictionary.git@.*#egg=gdcdictionary|gdcdictionary @ git+https://github.com/NCI-GDC/gdcdictionary.git@'"$GDCDICTIONARY_TARGET_VERSION"'#egg=gdcdictionary|' setup.cfg
    - cat setup.cfg
    - pip3 --version
    - pip3 install virtualenv pip-tools==6.3.0
    - pip-compile -i https://pypi.org/simple --extra=dev --output-file=dev-requirements.txt pyproject.toml
  artifacts:
    paths:
      - gdcdatamodel2/setup.cfg
      - gdcdatamodel2/dev-requirements.txt
    expire_in: 1 week
  rules:
    - !reference [.override_gdcdictionary_version, rules]

execute_plaster:
  image: docker.osdc.io/ncigdc/python3.8-builder:2.1.0
  stage: build
  script:
    - !reference [.load_github_key, script]
    - pwd
    - git clone git@github.com:NCI-GDC/gdcdatamodel2.git
    - cd gdcdatamodel2
    - git checkout "$GDCDICTIONARY_TARGET_VERSION" || git checkout -b "$GDCDICTIONARY_TARGET_VERSION"
    - git log -1
    - sed -i 's|version = .*|version ="'"$GDCDICTIONARY_TARGET_VERSION"'"|' plaster.toml
    - sed -i 's/is_git_tag = .*/is_git_tag = false/' plaster.toml
    - cat plaster.toml
    - bash plaster
    - git status
    - rm setup.cfg dev-requirements.txt
  artifacts:
    paths:
      - gdcdatamodel2
    expire_in: 1 week
  rules:
    - !reference [.override_gdcdictionary_version, rules]

release_datamodels_to_nexus:
  image: docker.osdc.io/ncigdc/python36-builder:1.4.0
  stage: release_gdcdatamodel2
  script:
    - cd gdcdatamodel2
    - ls -R .
    - cat setup.cfg
    - cat dev-requirements.txt
    - whoami
    - apt-get update
    - apt-get install -y python3-venv
    - pip3 install -U setuptools_scm build twine setuptools
    - python3 -m setuptools_scm
    - python3 -m build
    - twine check dist/*
    - twine upload dist/*
  variables:
    TWINE_USERNAME: ${TWINE_USER}
    TWINE_PASSWORD: ${TWINE_PASSWORD}
  artifacts:
    paths:
      - dist/*.whl
    reports:
      dotenv: vars.env
  rules:
    - !reference [.override_gdcdictionary_version, rules]
  dependencies:
    - update_reqs_for_gdcdatamodel2
    - execute_plaster

push_datamodels_to_github:
  image: docker.osdc.io/ncigdc/python36-builder:1.4.0
  stage: release_gdcdatamodel2
  script:
    - !reference [.load_github_key, script]
    - cd gdcdatamodel2
    - cat setup.cfg
    - cat dev-requirements.txt
    - git status
    - git add .
    - git commit -m "Use gdcdictionary $GDCDICTIONARY_TARGET_VERSION $CI_COMMIT_SHA"
    - git push origin "$GDCDICTIONARY_TARGET_VERSION"
  allow_failure: true   # failure when no changes of models
  rules:
    - !reference [.override_gdcdictionary_version, rules]
  dependencies:
    - update_reqs_for_gdcdatamodel2
    - execute_plaster
